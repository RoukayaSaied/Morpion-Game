{"version":3,"sources":["Components/square/square.component.jsx","Components/board/board.component.jsx","Components/game/game.component.jsx","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","calculateWinner","setState","concat","length","step","player","current","winner","status","moves","map","move","desc","key","Button","variant","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sVAGO,SAASA,EAAOC,GACnB,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,O,UCFNC,EAAb,qLACiBC,GAAI,IAAD,OACZ,OAAO,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAW,kBAAM,EAAKF,MAAME,QAAQG,QAH3D,+BAOQ,OACI,6BACI,yBAAKJ,UAAU,aACVK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAEvB,yBAAKP,UAAU,aACVK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAEvB,yBAAKP,UAAU,aACVK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,SAtBvC,GAA2BC,IAAMC,WCEpBC,EAAb,YACI,WAAYX,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTC,QAAS,CAAC,CAACN,QAAUO,MAAM,GAAGC,KAAK,QACnCC,SAAS,EACTC,WAAY,GALD,EADvB,yEAUgBZ,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQP,KAAKM,MAAMK,YACXV,QAAQW,QAC5BC,EAAgBZ,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKc,SAAS,CACVP,QAASA,EAAQQ,OAAO,CAAC,CAACd,QAASA,KACnCS,SAAUV,KAAKM,MAAMI,QACrBC,WAAaJ,EAAQS,YArBjC,6BAyBWC,GACHjB,KAAKc,SAAS,CACVH,WAAYM,EACZP,QAAUO,EAAO,IAAO,MA5BpC,+BAgCc,IAAD,OACCC,EAASlB,KAAKM,MAAMI,QAAU,IAAM,IACpCH,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASP,EAAgBM,EAAQlB,SACjCoB,EAASD,EAASA,EAAS,eAAc,gBAAkBF,EAC3DI,EAAQf,EAAQgB,KAAI,SAACN,EAAMO,GAC7B,IAAMC,EAAOD,EACT,wBAAuBA,EACvB,mCACJ,OACI,wBAAIE,IAAKF,GACL,kBAACG,EAAA,EAAD,CAASC,QAAQ,eAAehC,QAAS,kBAAM,EAAKiC,OAAOL,KAAQC,OAK/E,OACI,6BACI,yBAAK9B,UAAU,SAAf,gBAGA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,YAAY0B,GAC3B,kBAAC,EAAD,CACIpB,QAASkB,EAAQlB,QACjBL,QAAW,SAACG,GAAD,OAAO,EAAK+B,YAAY/B,OAE3C,yBAAKJ,UAAU,aACX,4BAAK2B,UA9D7B,GAA0BnB,IAAMC,WAuEhC,SAASS,EAAgBZ,GAWrB,IAVA,IAAM8B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFhC,EAAI,EAAGA,EAAIgC,EAAMf,OAAQjB,IAAK,CAAC,IAAD,cACjBgC,EAAMhC,GADW,GAC5BiC,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAGjC,EAAQ+B,IAAM/B,EAAQ+B,KAAO/B,EAAQgC,IAAMhC,EAAQiC,KAAOjC,EAAQgC,GACjE,OAAOhC,EAAQ+B,GAGvB,OAAO,KCvFXG,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.380c839e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './square.styles.css'\r\n\r\nexport function Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Square} from \"../square/square.component\";\r\nimport './board.styles.css'\r\n\r\nexport class Board extends React.Component {\r\n    renderSquare(i) {\r\n        return <Square value={this.props.squares[i]}\r\n                       onClick = {() => this.props.onClick(i)}/>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './game.styles.css'\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport {Board} from \"../board/board.component\";\r\n\r\nexport class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{squares : Array(9).fill(null)}],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[this.state.stepNumber];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{squares: squares}]),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber:  history.length,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const player = this.state.xIsNext ? 'X' : 'O';\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const status = winner ? winner + ' a gagné ' : 'Next player: ' + player;\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Revenir au tour n°' + move :\r\n                'Revenir au début de la partie';\r\n            return (\r\n                <li key={move}>\r\n                    <Button  variant=\"outline-info\" onClick={() => this.jumpTo(move)}>{desc}</Button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"title\">\r\n                    Morpion Game\r\n                </div>\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <div className=\"subtitle\">{status}</div>\r\n                        <Board\r\n                            squares={current.squares}\r\n                            onClick = {(i) => this.handleClick(i)}/>\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <ol>{moves}</ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[c] === squares[b]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Game} from \"./Components/game/game.component\";\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}